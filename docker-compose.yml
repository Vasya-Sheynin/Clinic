services:

  #controllers
  authcontroller:
    image: ${DOCKER_REGISTRY-}authcontroller
    build:
      context: .
      dockerfile: Auth/AuthController/Dockerfile
    environment:
      - DB_CONNECTION=${AUTH_DB_CONNECTION}
      - JWT_KEY=${JWT_KEY}
      - ADMIN_NAME=${ADMIN_NAME}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    depends_on:
      - db
      - rabbitmq
    ports:
      - 5001:8080
      - 5101:8081
    volumes:
      - db_data:/var/lib/sqlserver

  profilescontroller:
    image: ${DOCKER_REGISTRY-}profilescontroller
    build:
      context: .
      dockerfile: Profiles/ProfilesController/Dockerfile
    environment:
      - DB_CONNECTION=${PROFILES_DB_CONNECTION}
      - JWT_KEY=${JWT_KEY}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    depends_on:
      - db
      - rabbitmq
    ports:
      - 5002:8080
      - 5102:8081
    volumes:
      - db_data:/var/lib/sqlserver
  
  officescontroller:
    image: ${DOCKER_REGISTRY-}officescontroller
    build:
      context: .
      dockerfile: Offices/OfficesController/Dockerfile
    environment:
      - DB_CONNECTION=${OFFICES_DB_CONNECTION}
      - JWT_KEY=${JWT_KEY}
    depends_on:
      - db
    ports:
      - 5003:8080
      - 5103:8081
    volumes:
      - db_data:/var/lib/sqlserver

  documentscontroller:
    image: ${DOCKER_REGISTRY-}documentscontroller
    build:
      context: .
      dockerfile: Documents/DocumentsController/Dockerfile
    environment:
      - BLOB_CONN_STRING=${BLOB_CONN_STRING}
      - JWT_KEY=${JWT_KEY}
      - MONGODB_URI=${MONGODB_URI}
      - DB_NAME=${DB_NAME}
    depends_on:
      - mongo
      - azurite
    ports:
      - 5004:8080
      - 5104:8081
    volumes:
      - mongo_data:/var/lib/mongo_db
      - azure_data:/var/lib/azure_blob

  #persistence
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - 1433:1433
    volumes:
      - db_data:/var/lib/sqlserver
 
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  #RabbitMq
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"   
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  #Azure BLOB storage
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    command: azurite-blob --blobHost 0.0.0.0 --blobPort 10000
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    
volumes:
  rabbitmq_data:
  db_data:  
  mongo_data:  
  azure_data:
